// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using measurement_generator.Repository;

#nullable disable

namespace measurement_generator.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("measurement_generator.Models.Erp.Erp", b =>
                {
                    b.Property<int>("CodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.PrimitiveCollection<string>("AssociatedGroups")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Authenticated")
                        .HasColumnType("bit");

                    b.Property<string>("DnsIot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HaveFile")
                        .HasColumnType("bit");

                    b.Property<double>("IndexH")
                        .HasColumnType("float");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ScopeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodId");

                    b.ToTable("Erps");
                });

            modelBuilder.Entity("measurement_generator.Models.Request.LastAuxiliary12_000_0", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string>("BatteryReg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("PDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codId")
                        .HasColumnType("int");

                    b.Property<float?>("flow")
                        .HasColumnType("real");

                    b.Property<float?>("pressureInput")
                        .HasColumnType("real");

                    b.Property<float?>("pressureInputHighLimit")
                        .HasColumnType("real");

                    b.Property<float?>("pressureInputLowLimit")
                        .HasColumnType("real");

                    b.Property<float?>("pressureOutput")
                        .HasColumnType("real");

                    b.Property<float?>("pressureOutputHighLimit")
                        .HasColumnType("real");

                    b.Property<float?>("pressureOutputLowLimit")
                        .HasColumnType("real");

                    b.PrimitiveCollection<string>("regulator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("shutoffZASL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("status")
                        .HasColumnType("real");

                    b.Property<DateTime?>("timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LastMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
